
Qemu
================

## Qemu Setup

  apt install qemu-system-aarch64 qemu-efi-aarch64


## Create Image

  qemu-img create -f qcow2 my_disk.qcow2 16G


## Shrink img

  sdelete -z C:
  qemu-img convert -O qcow2 input.qcow output.qcow2


## amd64

  # Choose whichever fits the need
  && HDAIMG="-hda path/to/maindisk.qcow2" \
  && MACHINE="-m size=4G -smp cores=2" \
  && BIOSDIR="path/to/Bios"
  && BIOSFILE="path/to/bios-256k.bin" \
  && FIXMOUSEALIGN="-device usb-ehci,id=usb,bus=pci.0,addr=0x4 -device usb-tablet" \
  && NETWORK="-net nic -net user" \
  && NETWORK="-device e1000,netdev=net0 -netdev user,id=net0,hostfwd=tcp:127.0.0.1:10022-:22" \
  && HOSTSPECIFICOPTS="--enable-kvm" \
  && HOSTSPECIFICOPTS="-L ${BIOSDIR:?} -bios ${BIOSFILE:?}" \

Start with installation disk

  && CDROM="-cdrom path/to/installer.iso" \
  && qemu-system-x86_64 ${HOSTSPECIFICOPTS:?} ${MACHINE:?} -boot order=dc ${CDROM} ${HDAIMG:?} ${NETWORK:?} ${FIXMOUSEALIGN:?} \

Regular boot

  && qemu-system-x86_64 ${HOSTSPECIFICOPTS:?} ${MACHINE:?} -boot order=c ${HDAIMG:?} ${NETWORK:?} ${FIXMOUSEALIGN:?} \


## aarch64 (not working yet)

  MAC='00:de:ad:de:ad:00'
  DISK=my_disk.qcow2
  cp /usr/share/AAVMF/AAVMF_CODE.fd ./flash1.img
  qemu-system-aarch64 -m 1G -cpu cortex-a57 -M virt \
    -pflash /usr/share/AAVMF/AAVMF_CODE.fd \
    -pflash flash1.img \
    -drive if=none,file=${DISK:?},id=hd0 \
    -device virtio-blk-device,drive=hd0 \
    -device virtio-net-device,netdev=net0,mac=${MAC:?}

  qemu-system-aarch64 -M virt -hda my_disk.qcow2 -cdrom debian.iso -boot c -m 1G

  qemu-system-aarch64 -M virt -cpu cortex-a57 -m 1G -bios /usr/share/qemu-efi-aarch64/QEMU_EFI.fd -hda my_disk.qcow2 -cdrom ~/images/debian-12.0.0-arm64-DVD/debian-12.0.0-arm64-DVD-1.iso


## Shared host directory

For debian HOST install 'nfs-kernel-system', then:
  vim /etc/exports
  Example: "/path/to/share 127.0.0.1(rw,no_subtree_check,insecure)"
  exportfs -a && /etc/init.d/nfs-kernel-server restart

For windoof HOST install WinNFSd, then:
  WinNFSd.exe -addr 127.0.0.1 C:\path\to\share /path/to/share

In GUEST to access it do:
  apt install -y --no-install-recommends nfs-common
  apk add rpcbind && /etc/init.d/rpcbind start
  mkdir /mnt/host
  mount -t nfs -o vers=3 10.0.2.2:/path/to/share /mnt/host

Keep build result inside vm:
  mkdir /tmp/build /mnt/host/build
  mount --bind /tmp/build /mnt/host/build


## Alpine PostInstall

  true \
  && apk add bash openssh-server curl vim \
  && true


## Debian PostInstall

TODO: move this to a better place. Eg: debian/setup.txt or whatever.

  true \
  && http_proxy= \
  && https_proxy= \
  && no_proxy=127.0.0.1,10.0.2.* \
  && SUDO= \
  && true \
  && if [ -n "$http_proxy" ]; then true \
    && (echo "Acquire::http::proxy \"${http_proxy}\";"
        echo "Acquire::https::proxy \"${https_proxy}\";"
       ) | $SUDO tee /etc/apt/apt.conf.d/80proxy >/dev/null \
      fi \
  && $SUDO apt update \
  && $SUDO apt install -y --no-install-recommends vim openssh-server net-tools curl \
  && $SUDO sed -i -E 's;^GRUB_TIMEOUT=5$;GRUB_TIMEOUT=1;' /etc/default/grub \
  && $SUDO update-grub \
  && true


## Sources

- [apt via proxy](https://computingforgeeks.com/how-to-set-system-proxy-on-debian-linux/?expand_article=1)
- [Qemu ssh from host](https://wiki.qemu.org/Documentation/Networking)
- [shared host dir](https://superuser.com/a/628381/1123359)
- [NFS server for windoof](https://github.com/winnfsd/winnfsd)
- [NFS server for debian](https://vitux.com/debian_nfs_server/)

