
Kubectl usage
=============

HINT: See also
- "../aws/aws.txt"
- "../../../src/private/kube/"

Commands look the same as with openshift.



[kubectl logs](https://kubernetes.io/docs/reference/kubectl/generated/kubectl_logs/)

  kubectl logs ${POD:?} --tail=42 -f

  kubectl logs ${POD:?} --since-time=2024-12-31T24:59:59Z --timestamps=true

  && `# Get logs once ` \
  && logName= `# eg "houston", "preflux" \
  && stage= `# eg "prod", "test" \
  && pod=$(${KUBECTL:?} get pods | grep "${logName:?}" | cut -f1 -d' ') \
  && now=$(date -u +%Y%m%d-%H%M%S) \
  && ${KUBECTL:?} logs ${pod:?} > ${logName:?}-${stage:?}-log-${now:?}.out.log \
  && ${KUBECTL:?} logs -p ${pod:?} > ${logName:?}-${stage:?}-log-${now:?}.prev.out.log \

  && `# Get logs continuously (to file)` \
  && logName= `# eg: "houston", "preflux"` \
  && stage= `# "prod", "test"` \
  && KUBECTL= \
  && while sleep 1 ;do true \
    && echo "BEGIN ${KUBECTL:?} logs -f ${logName:?}.log" \
    && pod=$(${KUBECTL:?} get pods | grep "${logName:?}" | cut -f1 -d" ") \
    && now=$(date -u +%Y%m%d-%H%M%S) \
    && ${KUBECTL:?} logs -f ${pod:?} > ${logName:?}-${stage:?}-log-${now:?}.out.log \
    && echo "Retry in few seconds..." && sleep 5 \
    ;done \
  && echo "Has ENDed" \




## Record logs (live AND download) while jenkins test is running

  `# config`
  && namespaceFromJenkinsLog="isa-preview-preflux--992753950-1" `#isa-preview-__TODO__` \
  && svcName=preflux \

  `# shell nr 1, für service logs`
  && kubectl --context=eks-int-m15cn0001 -n "${namespaceFromJenkinsLog:?}" exec -i ${svcName:?}-0 -- sh -c 'cd logs && tail -F '"${svcName:?}"'.log ' > "jenkins-${svcName:?}-$(date +%s)-${svcName:?}.log" \

  `# shell nr 2, für platform logs`
  && kubectl --context=eks-int-m15cn0001 -n "${namespaceFromJenkinsLog:?}" exec -i ${svcName:?}-0 -- sh -c 'cd logs && tail -F platform.log ' > "jenkins-${svcName:?}-$(date +%s)-platform.log" \

  `# shell nr 3, für combine live preview`
  && tail -qF "jenkins-${svcName}-*${svcName:?}.log" "jenkins-${svcName:?}-*-platform.log" \

  `# others `
  && kubectl --context=eks-int-m15cn0001 -n "${namespaceFromJenkinsLog:?}" get pods

