
Docker
================

Likely "docker" commands require "sudo".


## Build image, container and run it

Example IMG:  "your_img_name:latest"
Example CNTNR: "your_container"

  cd /some/empty/directory
  curl -sSL "http://example.com/path/to.Dockerfile" | docker build . -f - -t IMG
  docker create --name CNTNR -v "$PWD:/work" IMG
  docker start CNTNR


## Basic Usage

  docker build -f DOCKERFILE -t IMG WORKDIR

  docker run --rm -ti IMG sh
  docker run --rm -i IMG sh --help

  docker exec -ti CNTNR sh
  docker exec -ti CNTNR -- sh -c 'echo foo bar'



## Manage Volumes

List:
  docker volume ls

List LARGE volumes:
  sudo sh -c 'cd /var/lib/docker/volumes && du -hs *' | sort -hrk1 | head

Show owner:
  docker ps -a --filter volume=VOLUME

Browse image:
  docker image ls | grep base
  docker run --rm -ti --entrypoint /bin/bash IMAGE -s

Browse volume:
  docker run --rm -ti -v=VOLUME:/mnt/myvolume IMAGE bash

Browse dead container:
  //TODO:  docker exec --entrypoint /bin/bash CONTAINER args for bash
  //WRONG: docker run --entrypoint /bin/bash CONTAINER args for bash

Export image:
  docker save PATH/NAME:VERSION > IMAGE.tar

Side-Mount tcpdump into container where it does not exist
  docker run --rm -ti --network container:"${CNTNR_TO_DUMP:?}" -v "/tmp/foo:/work" "${IMG_WITH_TCPDUMP_EG_BASEIMG:?}" bash



## Publish custom images to artifactory

To allow deletion: Tag MUST contain "latest" or "SNAPSHOT". Eg:
- "docker.example.com/USERNAME/<imagename>:latest"

  docker build -t my_image:0.0.0-SNAPSHOT .



## X11 app within container using host display

sudo docker create --name "${CNTNR:?}" -e DISPLAY -v /tmp/.X11-unix:/tmp/.X11-unix:ro "${IMG:?}"



