
WINDOOF=$(if [ -d /c/Windows ]; then echo true; else echo false; fi)

# Disable annoying "features", so that exclamation marks become usable again.
set +o histexpand

if test -z "$HISTCONTROL"; then export HISTCONTROL="ignorespace:ignoredups"; fi
if test -z "$HISTFILESIZE"; then export HISTFILESIZE=99999; fi
if test -z "$HISTSIZE"; then export HISTSIZE=99999; fi

if test $SHLVL -eq 1; then
    set -o ignoreeof # Require explicit 'exit' cmd to exit shell.
else
    set +o ignoreeof
fi

export PS1='\033[1;32m[\033[0m$? \033[1;30m\u\033[0m\033[1;32m@\033[1;$(test -n "$SSH_CONNECTION" && echo 31 || echo 30)m\h \033[1;34m\w\033[1;32m]\033[0m\n\$ '

# Add global node modules to path
#PATH=/opt/node-6.10.1/lib/node_modules/.bin:$PATH
# bash completion for npm
#source /opt/node-6.10.1/etc/npm-completion.sh

if test -d ~/.local/bin; then export PATH=~/.local/bin:$PATH; fi

# ssh-agent for WinDOOFs
if $WINDOOF; then
    env=~/.ssh/agent.env
    agent_load_env () { test -f "$env" && . "$env" >| /dev/null ; }
    agent_start () { (umask 077; ssh-agent >| "$env"); . "$env" >| /dev/null ; }
    agent_load_env
    # agent_run_state: 0=agent running w/ key; 1=agent w/o key; 2= agent not running
    agent_run_state=$(ssh-add -l >| /dev/null 2>&1; echo $?)
    if [ ! "$SSH_AUTH_SOCK" ] || [ $agent_run_state = 2 ]; then
        agent_start
        #ssh-add
    #elif [ "$SSH_AUTH_SOCK" ] && [ $agent_run_state = 1 ]; then
    #    ssh-add
    fi
    unset env
fi

