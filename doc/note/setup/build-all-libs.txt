
Build All Libs
==============

I'm ways too dumb to "just build a lib. It's easy...". Shut up! Look how long
this file is! Then you know how "easy" it is!

Source:
https://git.hiddenalpha.ch/UnspecifiedGarbage.git/tree/doc/note/setup/build-all-libs.txt


TODO: Test if (especially wdoof) builds are usable at all.
TODO: Add expat.
TODO: Add sqlite.
TODO: Add lua.
TODO: Add nuklear.
TODO: Add GLFW.


### Debian 9

  && PKGS_TO_ADD="ca-certificates curl make gcc libc6-dev" \
  && SUDO=sudo \
  && PKGINIT="$SUDO apt update" \
  && PKGADD="$SUDO apt install -y --no-install-recommends" \
  && PKGCLEAN="$SUDO apt clean" \
  && WINDOOF=false \
  && HOST= \


## Devuan 5 (x86_64-w64-mingw32)

  && PKGS_TO_ADD="ca-certificates curl make gcc-mingw-w64-x86-64-posix" \
  && SUDO=sudo \
  && PKGINIT="$SUDO apt update" \
  && PKGADD="$SUDO apt install -y --no-install-recommends" \
  && PKGCLEAN="$SUDO apt clean" \
  && WINDOOF=true \
  && HOST=x86_64-w64-mingw32 \


## BuildAllLibs Config

  && WORKDIR="/home/${USER:?}/work" \
  && CACHEDIR="/var/tmp" \
  \
  && ZLIB_VERSION="1.2.11" \
  && CJSON_VERSION="1.7.15" \
  && LUA_VERSION="5.4.3" \
  && MBEDTLS_FRAMEWORK_GITSHA1="a2c76945ca090f9dd099001d7c5158557f5a2036" \
  && MBEDTLS_VERSION="3.6.2" \
  && SQLITE_VERSION="3.33.0" \
  && EXPAT_VERSION="2.4.2" \
  \
  && CJSON_NDEBUG=1 \
  && MBEDTLS_NDEBUG=1 \
  \
  && MAKE_JOBS=$(nproc) \


## Make

  && ${PKGINIT:?} && ${PKGADD:?} ${PKGS_TO_ADD} \
  && mkdir -p "${WORKDIR}" \
  \
  && (true shell for zlib \
  && ZLIB_URL="https://downloads.sourceforge.net/project/libpng/zlib/${ZLIB_VERSION:?}/zlib-${ZLIB_VERSION:?}.tar.gz" \
  && ZLIB_SRCTAR="${CACHEDIR:?}/zlib-${ZLIB_VERSION:?}.tgz" \
  && ZLIB_DSTTAR="${CACHEDIR:?}/zlib-${ZLIB_VERSION:?}-bin.tgz" \
  && ZLIB_MD5SUM="${CACHEDIR:?}/zlib-${ZLIB_VERSION:?}.md5" \
  && mkdir "${WORKDIR:?}/zlib" \
  && cd "${WORKDIR:?}/zlib" \
  && if test -e "${ZLIB_SRCTAR:?}" ;then true \
      && echo "EEXISTS: ${ZLIB_SRCTAR:?}" \
    ;else true \
      && echo "Dload: ${ZLIB_URL:?}" \
      && curl -Lo "${ZLIB_SRCTAR:?}" "${ZLIB_URL:?}" \
    ;fi \
  && if test -e "${ZLIB_DSTTAR:?}" ;then true \
      && echo "EEXISTS: ${ZLIB_DSTTAR:?}" \
    ;else true \
      && tar --strip-components 1 -xf "${ZLIB_SRCTAR:?}" \
      && mkdir build \
      && if ${WINDOOF:?} ;then true \
          && export DESTDIR=./build BINARY_PATH=/bin INCLUDE_PATH=/include LIBRARY_PATH=/lib \
          && sed -i "s;^PREFIX =.\*\$;;" win32/Makefile.gcc \
          && make -e -j${MAKE_JOBS:?} -fwin32/Makefile.gcc PREFIX=${HOST}- \
          && make -e -fwin32/Makefile.gcc install PREFIX=${HOST}- \
          && unset DESTDIR BINARY_PATH INCLUDE_PATH LIBRARY_PATH \
        ;else true \
          && ./configure --prefix="$(pwd)/build/" \
          && make -j${MAKE_JOBS:?} && make install \
        ;fi \
      && cp README build/. \
      && (cd build && rm -rf lib/pkgconfig) \
      && (cd build && find -type f -not -name MD5SUM -exec md5sum -b {} + > MD5SUM) \
      && (cd build && tar --owner=0 --group=0 -czf "${ZLIB_DSTTAR:?}" README* include lib share MD5SUM) \
      && (cd "$(dirname "${ZLIB_DSTTAR:?}")" && md5sum -b "${ZLIB_DSTTAR:?}" >> "${ZLIB_MD5SUM:?}") \
      && rm -rf $(ls -A) \
    ;fi \
  && true EndOf zlib shell) \
  \
  && (true shell for cJSON \
  && CJSON_URL="https://github.com/DaveGamble/cJSON/archive/refs/tags/v${CJSON_VERSION:?}.tar.gz" \
  && CJSON_SRCTGZ="${CACHEDIR:?}/cJSON-${CJSON_VERSION:?}.tgz" \
  && CJSON_BINTGZ="${CACHEDIR:?}/cJSON-${CJSON_VERSION:?}-bin.tgz" \
  && CJSON_MD5SUM="${CACHEDIR:?}/cJSON-${CJSON_VERSION:?}.md5" \
  && if test -n "$HOST"; then HOST_="${HOST:?}-" ;fi \
  && if test ! -e "${CJSON_SRCTGZ:?}"; then (true \
     && echo "Download \"${CJSON_URL:?}\"" \
     && curl -sSLo "${CJSON_SRCTGZ:?}" "${CJSON_URL:?}" \
     );fi \
  && if test ! -e "${CJSON_BINTGZ:?}"; then (true \
     && printf '\n  Build cJSON\n\n' \
     && cd "${WORKDIR:?}" \
     && tar xzf "${CJSON_SRCTGZ:?}" \
     && cd "cJSON-${CJSON_VERSION:?}" \
     && mkdir build build/obj build/lib build/include \
     && CFLAGS="-Wall -pedantic -fPIC" \
     && ${HOST_}gcc $CFLAGS -c -o build/obj/cJSON.o cJSON.c \
     && ${HOST_}gcc $CFLAGS -shared -o build/lib/libcJSON.so.${CJSON_VERSION:?} build/obj/cJSON.o \
     && unset CFLAGS \
     && (cd build/lib \
        && MIN=${CJSON_VERSION%.*} && MAJ=${MIN%.*} \
        && ln -s libcJSON.so.${CJSON_VERSION:?} libcJSON.so.${MIN:?} \
        && ln -s libcJSON.so.${MIN:?} libcJSON.so.${MAJ} \
        ) \
     && ${HOST_}ar rcs build/lib/libcJSON.a build/obj/cJSON.o \
     && cp -t build/. LICENSE README.md \
     && cp -t build/include/. cJSON.h \
     && rm build/obj -rf \
     && (cd build \
        && find -type f -not -name MD5SUM -exec md5sum -b {} + > MD5SUM \
        && tar --owner=0 --group=0 -czf "${CJSON_BINTGZ:?}" * \
        && (cd "$(dirname "${CJSON_BINTGZ:?}")" \
            && md5sum -b "$(basename "${CJSON_BINTGZ:?}")" >> "${CJSON_MD5SUM:?}") \
        ) \
     && cd .. && rm -rf "cJSON-${CJSON_VERSION:?}" \
     );fi \
  && printf '\n  DONE (cJSON)\n\n' \
  && true EndOf cJSON shell) \
  \
  && (true shell for mbedtls \
  && MBEDTLS_URL="https://github.com/Mbed-TLS/mbedtls/archive/refs/tags/mbedtls-${MBEDTLS_VERSION:?}.tar.gz" \
  && MBEDTLS_SRCTGZ="${CACHEDIR:?}/mbedtls-${MBEDTLS_VERSION:?}.tgz" \
  && MBEDTLS_BINTGZ="${CACHEDIR:?}/mbedtls-${MBEDTLS_VERSION:?}-bin.tgz" \
  && MBEDTLS_MD5SUM="${CACHEDIR:?}/mbedtls-${MBEDTLS_VERSION:?}.md5" \
  && MBEDTLS_FRAMEWORK_URL="https://github.com/Mbed-TLS/mbedtls-framework/archive/${MBEDTLS_FRAMEWORK_GITSHA1:?}.tar.gz" \
  && MBEDTLS_FRAMEWORK_SRCTGZ="${CACHEDIR:?}/mbedtls-framework-g${MBEDTLS_FRAMEWORK_GITSHA1:0:7}.tgz" \
  && mkdir "${WORKDIR:?}/mbedtls" \
  && cd "${WORKDIR:?}/mbedtls" \
  && if test -e "${MBEDTLS_SRCTGZ:?}" ;then true \
      && echo "EEXISTS: ${MBEDTLS_SRCTGZ:?}" \
    ;else true \
      && echo "HTTP GET ${MBEDTLS_URL:?}" \
      && curl -Lo "${MBEDTLS_SRCTGZ:?}" "${MBEDTLS_URL:?}" \
    ;fi \
  && if test -e "${MBEDTLS_FRAMEWORK_SRCTGZ:?}" ;then true \
      && echo "EEXISTS: ${MBEDTLS_FRAMEWORK_SRCTGZ:?}" \
    ;else true \
      && echo "HTTP GET ${MBEDTLS_FRAMEWORK_URL:?}" \
      && curl -Lo "${MBEDTLS_FRAMEWORK_SRCTGZ:?}" "${MBEDTLS_FRAMEWORK_URL:?}" \
    ;fi \
  && if test -e "${MBEDTLS_BINTGZ:?}" ;then true \
      && printf '\nEEXISTS: Skip mbedtls build\n\n' \
      && sleep 3 \
    ;else true \
      && tar --strip-components=1 -xf "${MBEDTLS_SRCTGZ:?}" \
      && (cd framework && tar --strip-components=1 -xf "${MBEDTLS_FRAMEWORK_SRCTGZ:?}") \
      && (true \
          && `#TODO Mallocator  echo "#define MBEDTLS_PLATFORM_MEMORY" ` \
          && `#TODO Mallocator  echo "#undef  MBEDTLS_PLATFORM_FREE_MACRO" ` \
          && `#TODO Mallocator  echo "#undef  MBEDTLS_PLATFORM_CALLOC_MACRO" ` \
          && printf '#%s MBEDTLS_DEBUG_C\n' \
                "$(test "${MBEDTLS_NDEBUG:?}" -ne 0 && echo "undef" || echo "define")" \
         ) >> "include/mbedtls/mbedtls_config.h" \
      && if ${WINDOOF:?} ;then true \
          && export WINDOWS_BUILD=1 \
          && export CC=${HOST:?}-gcc \
          && export LD=${HOST:?}-ld \
          && export AR=${HOST:?}-ar \
        ;fi \
      && make -e -j${MAKE_JOBS:?} lib $(test "${MBEDTLS_NDEBUG:?}" -ne 0 || echo "DEBUG=1") \
      && mkdir build build/include build/lib \
      && cp -rt build/include/. include/psa include/mbedtls \
      && cp -rt build/lib/.  library/libmbedcrypto.a  library/libmbedtls.a  library/libmbedx509.a \
      && (true \
          && echo "version=${MBEDTLS_VERSION:?}" \
          && echo "mbedtlsFrameworkGitsha1=${MBEDTLS_FRAMEWORK_GITSHA1:?}" \
         ) > build/METADATA.INI \
      && (cd build && find -type f -exec md5sum -b {} + > MD5SUM) \
      && (cd build && tar --owner=0 --group=0 -czf "${MBEDTLS_BINTGZ:?}" METADATA.INI include lib MD5SUM) \
      && (cd "$(dirname "${MBEDTLS_BINTGZ:?}")" && md5sum -b "$(basename "${MBEDTLS_BINTGZ:?}")" >> "${MBEDTLS_MD5SUM:?}") \
    ;fi \
  && true EndOf mbedtls shell) \







