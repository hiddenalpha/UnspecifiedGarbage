
## Print why a package is installed

  apt-cache rdepends --no-suggests --no-conflicts --no-breaks --no-replaces \
      --no-enhances --installed --recurse \
      ${PKG_NAME:?}

WARN: I saw cases where above still misses to print relevant packages. Then I
      found another hack-around which did work for me. Just pretent to
      uninstall the package. Then the list might give some hints why it
      was installed:

  sudo apt purge --dry-run ${PKG_NAME:?}



## DNS timeout errors

  apt -o Acquire::ForceIPv4=true ...



## Use proxy permanently

"/etc/apt/apt.conf.d/80proxy"
+-----------------------------------------------------------------------
| Acquire::http::proxy "http://10.0.2.2:3128/";
| Acquire::https::proxy "http://10.0.2.2:3128/";
+-----------------------------------------------------------------------



## About annoying TLS intercept proxies

"/etc/apt/apt.conf.d/80fuckannoyingcorporateproxies"

// in general:
Acquire::https::Verify-Peer "false";
Acquire::https::Verify-Host "false";

// just for a specific host:
Acquire::https::repo.domain.tld::Verify-Peer "false";
Acquire::https::repo.domain.tld::Verify-Host "false";



## Prime locally cached packages


  && `# dload (incl deps) into default cache` \
  && $SUDO apt install --download-only ${pkgNms:?} \


  && `# dload (incl deps) into custom dir` \
  && $SUDO apt install --download-only -o Dir::Cache=/path/to/custom/cache -o Dir::State::Lists=/path/to/custom/lists ${pkgNms:?}


  && `# dload individual pkgs only (without deps)` \
  && $SUDO apt download ${pkgNms:?} \

