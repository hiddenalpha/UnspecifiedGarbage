
SSH Setup & Key Management
==========================

## Refs

- [Insane answer about key formats](https://stackoverflow.com/a/29707204/4415884)



## Create New Ssh Key

Create "path/to/key" and "path/to/key.pub" as a 2048 bit RSA with
"your comment" as comment (you can skip "-C comment" if you dont care).

TODO: mättu sagt evtl noch "-a 256" angeben für keygen.

```sh
ssh-keygen -t rsa -b 3072 -f path/to/key -C "your comment"
```

```sh
ssh-keygen -t ed25519 -f path/to/key -C "your comment"
```



## Change Passphrase

```sh
ssh-keygen -p -f path/to/key
```

NOTE: Just hitting enter when asked for the new one will remove the passphrase.



## Inspect keys

Print public key hash:
```sh
ssh-keygen -l -f path/to/key.pub
```

Print public key hash as md5:
```sh
ssh-keygen -E md5 -l -f path/to/key.pub
```

Extract public key part:
```sh
ssh-keygen -y -f path/to/key > path/to/key.pub
```

Print detailed DER file content:
  openssl x509 -in dumpcertfile -inform DER -text

Print key of a host:
  printf 'foo.com\nbar.com\n' | ssh-keyscan -t rsa,dsa -p22 -f-


## Export pub key in misc formats

  ssh-keygen -e -f path/to/ssh2pub-or-privKey -m PKCS8

  openssl rsa -in path/to/ssh2pub-or-privKey -outform DER

SPKI to PKCS1:
  openssl rsa -pubin -in path/to/spki -RSAPublicKey_out

PKCS1 to SPKI:
  openssl rsa -RSAPublicKey_in -in path/to/pkcs1 -pubout

TODO to PKCS8:
  ssh-keygen -i -f path/to/key.pub -e -m PKCS8 > path/to/pub.pem


## Find entry in known_hosts

  ssh-keygen -F example.com
  ssh-keygen -F [example.com]:22


## Remove obsolete entry from known_hosts

  ssh-keygen -f path/to/known_hosts -R "example.com"



## TODO

 -e      This option will read a private or public OpenSSH key file
         and print to stdout a public key in one of the formats
         specified by the -m option.  The default export format is
         “RFC4716”.  This option allows exporting OpenSSH keys for
         use by other programs, including several commercial SSH
         implementations.

