
## fCGI keep alive backend connections

upstream myFancyBackend {
    server unix:/tmp/fastcgi/socket1;
    server ;
    keepalive 4;
} 
server {
    location /foo/bar {
        fastcgi_pass myFancyBackend;
        fastcgi_keep_conn on;
    }
}


## Delegate requests to custom scripts via fcgiwrap

  true \
  && DOCUMENT_ROOT="/var/www" \
  && CGI_DIR="${DOCUMENT_ROOT:?}/cgi-bin" \
  && VHOST="fcgiwrap" \
  && HOSTNAME="localhost" \
  && LOCATION="/cgi-bin" \
  && NGINX_HTTPD_DIR="/etc/nginx/sites-available" \
  && ENABLE_SITE="ln -s ${NGINX_HTTPD_DIR:?}/${VHOST:?} /etc/nginx/sites-enabled/." \
  && PKGINIT="apt update" \
  && PKGADD="apt install -y --no-install-recommends" \
  && PKGSTOADD="nginx fcgiwrap" \
  && FASTCGI_PARAMS="/etc/nginx/fastcgi_params" \
  && true \
  && ${PKGINIT} \
  && ${PKGADD:?} ${PKGSTOADD:?} \
  && if [ -e "${NGINX_HTTPD_DIR:?}/${VHOST:?}" ]; then \
         echo "File already exists: ${NGINX_HTTPD_DIR:?}/${VHOST:?}"; \
         false; \
     fi; \
  && (  echo 'server {' \
     && echo "  listen 80;" \
     && echo "  listen [::]:80;" \
     && echo '' \
     && echo "  server_name ${HOSTNAME:?};" \
     && echo '' \
     && echo '  location /cgi-bin/ {' \
     && echo '    gzip off;' \
     && echo "    root ${DOCUMENT_ROOT:?};" \
     && echo '    fastcgi_pass  unix:/var/run/fcgiwrap.socket;' \
     && echo "    include ${FASTCGI_PARAMS:?};" \
     && echo '    #fastcgi_param SCRIPT_FILENAME  '"${CGI_DIR:?}"'$fastcgi_script_name;' \
     && echo '  }' \
     && echo '' \
     && echo '}' \
     ) >"${NGINX_HTTPD_DIR:?}/${VHOST:?}" \
  && ${ENABLE_SITE:?} \
  && true


