
## Basic nginx config

ALWAYS test the config for mistakes:
  nginx -t

WARN: Do NOT use 'alias' directive! It is broken as hell. Use 'root'.

[looks promising](https://stackoverflow.com/a/73297125/4415884)

  # Basic setup:
  # - Maybe change "access_log" to "/var/log/nginx/access.log".
  # - For CLI use: Change all "/tmp/nginx" to "." (single dot, aka workdir or
  #   other user writable dir).
  # Public expose setup:
  # - Adapt "listen" as commented.
  # - set "server_name" to meaningful value.
  #
  #daemon off;  # run in foreground (eg from cli)
  #user www-data;
  #worker_processes auto;
  pid /run/nginx.pid;
  events {}
  user www-data www-data;
  access_log /dev/stderr combined;
  error_log /dev/stderr error; # debug, info, notice, warn, error, crit, alert, emerg.
  http {
      # Directories nginx needs configured to start up.
      client_body_temp_path /tmp/nginx;
      proxy_temp_path /tmp/nginx;
      fastcgi_temp_path /tmp/nginx;
      uwsgi_temp_path /tmp/nginx;
      scgi_temp_path /tmp/nginx;
      server_tokens off;
      server {
          # Example: Serve localhost:
          listen 127.0.0.1:80;
          listen [::1]:80;
          # Example: Serve any:
          #listen 80;
          #listen [::]:80;
          # Example: Serve for any 'Host' header (Todo remove server_name):
          #listen 127.0.0.1:80 default_server;
          #listen [::1]:80 default_server;
          server_name localhost;
          root /srv/www;
          location /foo {
              #autoindex on; # directory listing
              try_files $uri $uri/ =404;
          }
          location /example {
              return 418 "Teapod says hi\n";
          }
      }
  }


[tutorial](https://www.javatpoint.com/nginx-minimal-configuration)



## fCGI keep alive backend connections

upstream myFancyBackend {
    server unix:/tmp/fastcgi/socket1;
    server ;
    keepalive 4;
} 
server {
    location /foo/bar {
        fastcgi_pass myFancyBackend;
        fastcgi_keep_conn on;
    }
}


## Delegate requests to custom scripts via fcgiwrap

  true \
  && DOCUMENT_ROOT="/var/www" \
  && CGI_DIR="${DOCUMENT_ROOT:?}/cgi-bin" \
  && VHOST="fcgiwrap" \
  && HOSTNAME="localhost" \
  && LOCATION="/cgi-bin" \
  && NGINX_HTTPD_DIR="/etc/nginx/sites-available" \
  && ENABLE_SITE="ln -s ${NGINX_HTTPD_DIR:?}/${VHOST:?} /etc/nginx/sites-enabled/." \
  && PKGINIT="apt update" \
  && PKGADD="apt install -y --no-install-recommends" \
  && PKGSTOADD="nginx fcgiwrap" \
  && FASTCGI_PARAMS="/etc/nginx/fastcgi_params" \
  && true \
  && ${PKGINIT} \
  && ${PKGADD:?} ${PKGSTOADD:?} \
  && if [ -e "${NGINX_HTTPD_DIR:?}/${VHOST:?}" ]; then \
         echo "File already exists: ${NGINX_HTTPD_DIR:?}/${VHOST:?}"; \
         false; \
     fi; \
  && (  echo 'server {' \
     && echo "  listen 80;" \
     && echo "  listen [::]:80;" \
     && echo '' \
     && echo "  server_name ${HOSTNAME:?};" \
     && echo '' \
     && echo '  location /cgi-bin/ {' \
     && echo '    gzip off;' \
     && echo "    root ${DOCUMENT_ROOT:?};" \
     && echo '    fastcgi_pass  unix:/var/run/fcgiwrap.socket;' \
     && echo "    include ${FASTCGI_PARAMS:?};" \
     && echo '    #fastcgi_param SCRIPT_FILENAME   $document_root$fastcgi_script_name;' \
     && echo '    #fastcgi_param SCRIPT_NAME       $fastcgi_script_name;' \
     && echo '    #fastcgi_param QUERY_STRING      $query_string;' \
     && echo '    #fastcgi_param REQUEST_METHOD    $request_method;' \
     && echo '    #fastcgi_param CONTENT_TYPE      $content_type;' \
     && echo '    #fastcgi_param CONTENT_LENGTH    $content_length;' \
     && echo '    #fastcgi_param REQUEST_URI       $request_uri;' \
     && echo '    #fastcgi_param DOCUMENT_URI      $document_uri;' \
     && echo '    #fastcgi_param DOCUMENT_ROOT     $document_root;' \
     && echo '    #fastcgi_param SERVER_PROTOCOL   $server_protocol;' \
     && echo '    #fastcgi_param GATEWAY_INTERFACE CGI/1.1;' \
     && echo '    #fastcgi_param SERVER_SOFTWARE   nginx/$nginx_version;' \
     && echo '    #fastcgi_param REMOTE_ADDR       $remote_addr;' \
     && echo '    #fastcgi_param REMOTE_PORT       $remote_port;' \
     && echo '    #fastcgi_param SERVER_ADDR       $server_addr;' \
     && echo '    #fastcgi_param SERVER_PORT       $server_port;' \
     && echo '    #fastcgi_param SERVER_NAME       $host;' \
     && echo '  }' \
     && echo '' \
     && echo '}' \
     ) >"${NGINX_HTTPD_DIR:?}/${VHOST:?}" \
  && ${ENABLE_SITE:?} \
  && true


